#include <stdlib.h>
#include <time.h>
#include <stdio.h>
#include <stdarg.h>
#include <unistd.h>
/**
 * _putchar - writes the character c to stdout
 * @c: The character to print
 *
 * Return: On success 1.
 * On error, -1 is returned, and error is set appropriately.
 */
int _putchar(char c)
{
	return (write(1, &c, 1));
}
/**
* Task 0.
* This program will assign a random number to the variable n
* each time it is executed. Complete the source code in order
* to print whether the number stored in the variable n is
* positive or negative. You can find the source code here.
* The variable n will store a different value every time you
* will run this program
* You donâ€™t have to understand what rand, srand, RAND_MAX do.
* Please do not touch this code, The output of the program
* should be: The number, followed by if the number is greater
* than 0: is positive if the number is 0: is zero if the
* number is less than 0: is negative followed by a new line.
*/

void randomm()
{
    int n;
    srand(time(0));
    n = rand() - RAND_MAX / 2;
    {
        if (n < 0)
        {
            printf("'%d' is negative\n", n);
            return(0);
        }
        if (n == 0)
        {
            printf("'%d' is zero\n", n);
            return(0);
        }
        else
        {
            printf("'%d' is positive\n", n);
            return(0);
        }
    }
    return(0);
}
void last_num()
{
    int n;
    srand(time(0));
    n = rand() - RAND_MAX / 2;
    {
        int b = (n % 10);
        if (b > 5)
        {
            printf("The string last digit of %d is '%d' is greater than 5\n", n, b);
            return(0);
        }
        if (b == 0)
        {
            printf("The string last digit of %d is '%d' is zero\n", n, b);
            return(0);
        }
        if (b < 6 && b != 0)
        {
            printf("The string last digit of %d is '%d' is less than 6 and not zero\n", n, b);
            return(0);
        }
    }
    return(0);
}
void print_lowercase_alphabet()
{
    int i = 0;
    for (i = 'a'; i <= 'z'; i++)
    {
        _putchar(i);
    }
    _putchar('\n');
    return(0);
}
void print_alphabet()
{
    int i = 0;
    for (i = 'a'; i <= 'z'; i++)
    {
        _putchar(i);
    }
    for (i = 'A'; i <= 'Z'; i++)
    {
        _putchar(i);
    }
    _putchar('\n');
    return(0);
}
void print_lowercase_not_e_and_q()
{
    int i = 0;
    for (i = 'a'; i <= 'z'; i++)
    {
        if (i == 'e' || i == 'q')
        {
            continue;
        }
        _putchar(i);
    }
    _putchar('\n');
    return(0);
}
void print_digit()
{
    for (int i = 48; i <= 57; i++)
    {
        _putchar(i);
    }
    _putchar('\n');
    return(0);
}
void print_base10()
{
    for (int i = 48; i <= 57; i++)
    {
        _putchar(i);
    }
    _putchar('\n');
    return(0);
}
void print_reverse_lowercase_alphabet()
{
    int i = 0;
    for (i = 'z'; i >= 'a'; i--)
    {
        _putchar(i);
    }
    _putchar('\n');
    return(0);
}
void print_base16()
{
    for (int i = 48; i <= 56; i++)
    {
        _putchar(i);
    }
    for (int j = 'a'; j <= 'f'; j++)
    {
        _putchar(j);
    }
    _putchar('\n');
    return(0);
}


int main(int argc, char * argv[])
{

    printf("Task 0 answer:\n");
    randomm();

    printf("\n");
    printf("Task 1 answer:\n");
    last_num();

    printf("\n");
    printf("Task 2 answer:\n");
    print_lowercase_alphabet();

    printf("\n");
    printf("Task 3 answer:\n");
    print_alphabet();

    printf("\n");
    printf("Task 4 answer:\n");
    print_lowercase_not_e_and_q();

    printf("\n");
    printf("Task 5 answer:\n");
    print_digit();

    printf("\n");
    printf("Task 6 answer:\n");
    print_base10();

    printf("\n");
    printf("Task 7 answer:\n");
    print_reverse_lowercase_alphabet();

    printf("\n");
    printf("Task 8 answer:\n");
    print_base16();


}

